TODO list / iohub 2021 rework project notes

eyetracker related
------------------

- remove inner_stroke_width setting from tobii
- remove outer_stroke_width setting from tobii
- change inner_fill_color and inner_stroke_color -> inner_color in tobii settings
- change outer_fill_color and outer_stroke_color -> outer_color in tobii settings

- make eyelink and tobii target setting consistent.


Other
-----

- Python 3 only support is OK

- Test / start developing with Python 3.9

- remove any areas of logic dealing with Python 2 vs Python 3 incompatibilities.

- remove unneeded params from all supported_config_settings.yaml/default_device.yaml files
    - did some obvious ones already, but a device by device review would be good.

- remove unused / placeholder Constants (iohub.constants.py)

- stop using lazy_import. Not sure it is really needed for iohub

- ?? implement a new 'Mouse' base eye tracker implementation so people can use the mouse to simulate eye movements
  in their experiment and get sample data like it was from a real eye tracker.
  - might also act as a good 'template' for creating a new eye tracker interface with.

- ?? Assume / enforce only 1 experiment, 1 session per iohub hdf5 file

- switch iohub source code copywrite to standard psychopy text.

- remove all references to these no longer supported devices:
        - EventPublisher (unless we keep it)
        - EventSub (unless we keep it)
        - DAQ (was used for labjack and Measurement Computing analog input)

- macos keyboard and mouse events:
    - switch from polling method of CFRunLoopRunInMode to threaded approach used by eventmp.
    - if that is not enough, reimplement using usb sniffer or just correct timestamp
      for _minimum_ possible event delay.

- ?? remove event filtering framework (iohub.devices.eventfilters.py)
    - not actually used from what I can tell.

- ?? remove need for / use of experiment_config.yaml. Determine what functionality this will affect.

- ?? revert to server side only devices / events accessed via RPC.
    - remove iohub.client.keyboard.py and iohub.client.wintab.py
    - move any needed methods / functionality to the server side device class, or deprecate.
    - experiment would now get 'native' iohub keyboard and wintab events, which is not backwards compatible.

- Documentation ideas:
    - ioHub Developer 'Notes'
    - Psychopy ioHub User Docs
        - Saving data using ioHub DataStore:
            - device events
            - experiment and session meta data
            - condition variables table
            - hdf5 file structure
            - reading data / doing analysis from hdf5 files

- Some bigger issues that would be good to address:
    - Consistent iohub Error / exception reporting framework:
        - communication of issues to client process.
        - reporting of issues by client process
        - cleanup (remove? iohub.errors.py)
    - Consistent device status reporting after client starts iohub process.
    - Create files in user writable folder (use OS specific standard folders)
